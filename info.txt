-----------------------------------------------------------------------------
Info file generated by Happy Version 1.18.9 from Parser.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseJava -> classdef                       (0)
	classdef -> class identifier classbody             (1)
	classdef -> modifiers class identifier classbody   (2)
	modifiers -> modifiers modifier                    (3)
	modifiers -> modifier                              (4)
	modifier -> public                                 (5)
	modifier -> private                                (6)
	modifier -> final                                  (7)
	modifier -> static                                 (8)
	classbody -> '{' classbodyelements '}'             (9)
	classbody -> '{' '}'                               (10)
	classbodyelements -> classbodyelements classbodyelement   (11)
	classbodyelements -> classbodyelement              (12)
	classbodyelement -> functiondecl                   (13)
	functiondecl -> functionhead                       (14)
	functionhead -> functiontype identifier functionparameters   (15)
	functionhead -> modifiers functiontype identifier functionparameters   (16)
	functionparameters -> '(' formalparameters ')'     (17)
	functionparameters -> '(' ')'                      (18)
	formalparameters -> formalparameters ',' formalparameter   (19)
	formalparameters -> formalparameter                (20)
	formalparameter -> type identifier                 (21)
	name -> qualifiedname                              (22)
	name -> simplename                                 (23)
	simplename -> identifier                           (24)
	qualifiedname -> name '.' identifier               (25)
	type -> primitivetype                              (26)
	type -> referencetype                              (27)
	primitivetype -> boolean                           (28)
	primitivetype -> integer                           (29)
	primitivetype -> char                              (30)
	referencetype -> name                              (31)
	functiontype -> type                               (32)
	functiontype -> void                               (33)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	class          { ClassToken _ }
	'{'            { LeftBracesToken _ }
	'}'            { RightBracesToken _ }
	identifier     { IdentifierToken $$ _ }
	public         { PublicToken _ }
	private        { PrivateToken _ }
	final          { FinalToken _ }
	static         { StaticToken _ }
	'.'            { DotToken _ }
	boolean        { BooleanToken _ }
	integer        { IntToken _ }
	char           { CharToken _ }
	'('            { LeftParenthesisToken _ }
	')'            { RightParenthesisToken _ }
	void           { VoidToken _ }
	','            { CommaToken _ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseJava rule  0
	classdef        rules 1, 2
	modifiers       rules 3, 4
	modifier        rules 5, 6, 7, 8
	classbody       rules 9, 10
	classbodyelements rules 11, 12
	classbodyelement rule  13
	functiondecl    rule  14
	functionhead    rules 15, 16
	functionparameters rules 17, 18
	formalparameters rules 19, 20
	formalparameter rule  21
	name            rules 22, 23
	simplename      rule  24
	qualifiedname   rule  25
	type            rules 26, 27
	primitivetype   rules 28, 29, 30
	referencetype   rule  31
	functiontype    rules 32, 33

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	class          shift, and enter state 2
	public         shift, and enter state 6
	private        shift, and enter state 7
	final          shift, and enter state 8
	static         shift, and enter state 9

	classdef       goto state 3
	modifiers      goto state 4
	modifier       goto state 5

State 1


	class          shift, and enter state 2


State 2

	classdef -> class . identifier classbody            (rule 1)

	identifier     shift, and enter state 12


State 3

	%start_parseJava -> classdef .                      (rule 0)

	%eof           accept


State 4

	classdef -> modifiers . class identifier classbody    (rule 2)
	modifiers -> modifiers . modifier                   (rule 3)

	class          shift, and enter state 11
	public         shift, and enter state 6
	private        shift, and enter state 7
	final          shift, and enter state 8
	static         shift, and enter state 9

	modifier       goto state 10

State 5

	modifiers -> modifier .                             (rule 4)

	class          reduce using rule 4
	identifier     reduce using rule 4
	public         reduce using rule 4
	private        reduce using rule 4
	final          reduce using rule 4
	static         reduce using rule 4
	boolean        reduce using rule 4
	integer        reduce using rule 4
	char           reduce using rule 4
	void           reduce using rule 4


State 6

	modifier -> public .                                (rule 5)

	class          reduce using rule 5
	identifier     reduce using rule 5
	public         reduce using rule 5
	private        reduce using rule 5
	final          reduce using rule 5
	static         reduce using rule 5
	boolean        reduce using rule 5
	integer        reduce using rule 5
	char           reduce using rule 5
	void           reduce using rule 5


State 7

	modifier -> private .                               (rule 6)

	class          reduce using rule 6
	identifier     reduce using rule 6
	public         reduce using rule 6
	private        reduce using rule 6
	final          reduce using rule 6
	static         reduce using rule 6
	boolean        reduce using rule 6
	integer        reduce using rule 6
	char           reduce using rule 6
	void           reduce using rule 6


State 8

	modifier -> final .                                 (rule 7)

	class          reduce using rule 7
	identifier     reduce using rule 7
	public         reduce using rule 7
	private        reduce using rule 7
	final          reduce using rule 7
	static         reduce using rule 7
	boolean        reduce using rule 7
	integer        reduce using rule 7
	char           reduce using rule 7
	void           reduce using rule 7


State 9

	modifier -> static .                                (rule 8)

	class          reduce using rule 8
	identifier     reduce using rule 8
	public         reduce using rule 8
	private        reduce using rule 8
	final          reduce using rule 8
	static         reduce using rule 8
	boolean        reduce using rule 8
	integer        reduce using rule 8
	char           reduce using rule 8
	void           reduce using rule 8


State 10

	modifiers -> modifiers modifier .                   (rule 3)

	class          reduce using rule 3
	identifier     reduce using rule 3
	public         reduce using rule 3
	private        reduce using rule 3
	final          reduce using rule 3
	static         reduce using rule 3
	boolean        reduce using rule 3
	integer        reduce using rule 3
	char           reduce using rule 3
	void           reduce using rule 3


State 11

	classdef -> modifiers class . identifier classbody    (rule 2)

	identifier     shift, and enter state 15


State 12

	classdef -> class identifier . classbody            (rule 1)

	'{'            shift, and enter state 14

	classbody      goto state 13

State 13

	classdef -> class identifier classbody .            (rule 1)

	%eof           reduce using rule 1


State 14

	classbody -> '{' . classbodyelements '}'            (rule 9)
	classbody -> '{' . '}'                              (rule 10)

	'}'            shift, and enter state 29
	identifier     shift, and enter state 30
	public         shift, and enter state 6
	private        shift, and enter state 7
	final          shift, and enter state 8
	static         shift, and enter state 9
	boolean        shift, and enter state 31
	integer        shift, and enter state 32
	char           shift, and enter state 33
	void           shift, and enter state 34

	modifiers      goto state 17
	modifier       goto state 5
	classbodyelementsgoto state 18
	classbodyelementgoto state 19
	functiondecl   goto state 20
	functionhead   goto state 21
	name           goto state 22
	simplename     goto state 23
	qualifiedname  goto state 24
	type           goto state 25
	primitivetype  goto state 26
	referencetype  goto state 27
	functiontype   goto state 28

State 15

	classdef -> modifiers class identifier . classbody    (rule 2)

	'{'            shift, and enter state 14

	classbody      goto state 16

State 16

	classdef -> modifiers class identifier classbody .    (rule 2)

	%eof           reduce using rule 2


State 17

	modifiers -> modifiers . modifier                   (rule 3)
	functionhead -> modifiers . functiontype identifier functionparameters    (rule 16)

	identifier     shift, and enter state 30
	public         shift, and enter state 6
	private        shift, and enter state 7
	final          shift, and enter state 8
	static         shift, and enter state 9
	boolean        shift, and enter state 31
	integer        shift, and enter state 32
	char           shift, and enter state 33
	void           shift, and enter state 34

	modifier       goto state 10
	name           goto state 22
	simplename     goto state 23
	qualifiedname  goto state 24
	type           goto state 25
	primitivetype  goto state 26
	referencetype  goto state 27
	functiontype   goto state 39

State 18

	classbody -> '{' classbodyelements . '}'            (rule 9)
	classbodyelements -> classbodyelements . classbodyelement    (rule 11)

	'}'            shift, and enter state 38
	identifier     shift, and enter state 30
	public         shift, and enter state 6
	private        shift, and enter state 7
	final          shift, and enter state 8
	static         shift, and enter state 9
	boolean        shift, and enter state 31
	integer        shift, and enter state 32
	char           shift, and enter state 33
	void           shift, and enter state 34

	modifiers      goto state 17
	modifier       goto state 5
	classbodyelementgoto state 37
	functiondecl   goto state 20
	functionhead   goto state 21
	name           goto state 22
	simplename     goto state 23
	qualifiedname  goto state 24
	type           goto state 25
	primitivetype  goto state 26
	referencetype  goto state 27
	functiontype   goto state 28

State 19

	classbodyelements -> classbodyelement .             (rule 12)

	'}'            reduce using rule 12
	identifier     reduce using rule 12
	public         reduce using rule 12
	private        reduce using rule 12
	final          reduce using rule 12
	static         reduce using rule 12
	boolean        reduce using rule 12
	integer        reduce using rule 12
	char           reduce using rule 12
	void           reduce using rule 12


State 20

	classbodyelement -> functiondecl .                  (rule 13)

	'}'            reduce using rule 13
	identifier     reduce using rule 13
	public         reduce using rule 13
	private        reduce using rule 13
	final          reduce using rule 13
	static         reduce using rule 13
	boolean        reduce using rule 13
	integer        reduce using rule 13
	char           reduce using rule 13
	void           reduce using rule 13


State 21

	functiondecl -> functionhead .                      (rule 14)

	'}'            reduce using rule 14
	identifier     reduce using rule 14
	public         reduce using rule 14
	private        reduce using rule 14
	final          reduce using rule 14
	static         reduce using rule 14
	boolean        reduce using rule 14
	integer        reduce using rule 14
	char           reduce using rule 14
	void           reduce using rule 14


State 22

	qualifiedname -> name . '.' identifier              (rule 25)
	referencetype -> name .                             (rule 31)

	identifier     reduce using rule 31
	'.'            shift, and enter state 36


State 23

	name -> simplename .                                (rule 23)

	identifier     reduce using rule 23
	'.'            reduce using rule 23


State 24

	name -> qualifiedname .                             (rule 22)

	identifier     reduce using rule 22
	'.'            reduce using rule 22


State 25

	functiontype -> type .                              (rule 32)

	identifier     reduce using rule 32


State 26

	type -> primitivetype .                             (rule 26)

	identifier     reduce using rule 26


State 27

	type -> referencetype .                             (rule 27)

	identifier     reduce using rule 27


State 28

	functionhead -> functiontype . identifier functionparameters    (rule 15)

	identifier     shift, and enter state 35


State 29

	classbody -> '{' '}' .                              (rule 10)

	%eof           reduce using rule 10


State 30

	simplename -> identifier .                          (rule 24)

	identifier     reduce using rule 24
	'.'            reduce using rule 24


State 31

	primitivetype -> boolean .                          (rule 28)

	identifier     reduce using rule 28


State 32

	primitivetype -> integer .                          (rule 29)

	identifier     reduce using rule 29


State 33

	primitivetype -> char .                             (rule 30)

	identifier     reduce using rule 30


State 34

	functiontype -> void .                              (rule 33)

	identifier     reduce using rule 33


State 35

	functionhead -> functiontype identifier . functionparameters    (rule 15)

	'('            shift, and enter state 43

	functionparametersgoto state 42

State 36

	qualifiedname -> name '.' . identifier              (rule 25)

	identifier     shift, and enter state 41


State 37

	classbodyelements -> classbodyelements classbodyelement .    (rule 11)

	'}'            reduce using rule 11
	identifier     reduce using rule 11
	public         reduce using rule 11
	private        reduce using rule 11
	final          reduce using rule 11
	static         reduce using rule 11
	boolean        reduce using rule 11
	integer        reduce using rule 11
	char           reduce using rule 11
	void           reduce using rule 11


State 38

	classbody -> '{' classbodyelements '}' .            (rule 9)

	%eof           reduce using rule 9


State 39

	functionhead -> modifiers functiontype . identifier functionparameters    (rule 16)

	identifier     shift, and enter state 40


State 40

	functionhead -> modifiers functiontype identifier . functionparameters    (rule 16)

	'('            shift, and enter state 43

	functionparametersgoto state 48

State 41

	qualifiedname -> name '.' identifier .              (rule 25)

	identifier     reduce using rule 25
	'.'            reduce using rule 25


State 42

	functionhead -> functiontype identifier functionparameters .    (rule 15)

	'}'            reduce using rule 15
	identifier     reduce using rule 15
	public         reduce using rule 15
	private        reduce using rule 15
	final          reduce using rule 15
	static         reduce using rule 15
	boolean        reduce using rule 15
	integer        reduce using rule 15
	char           reduce using rule 15
	void           reduce using rule 15


State 43

	functionparameters -> '(' . formalparameters ')'    (rule 17)
	functionparameters -> '(' . ')'                     (rule 18)

	identifier     shift, and enter state 30
	boolean        shift, and enter state 31
	integer        shift, and enter state 32
	char           shift, and enter state 33
	')'            shift, and enter state 47

	formalparametersgoto state 44
	formalparametergoto state 45
	name           goto state 22
	simplename     goto state 23
	qualifiedname  goto state 24
	type           goto state 46
	primitivetype  goto state 26
	referencetype  goto state 27

State 44

	functionparameters -> '(' formalparameters . ')'    (rule 17)
	formalparameters -> formalparameters . ',' formalparameter    (rule 19)

	')'            shift, and enter state 50
	','            shift, and enter state 51


State 45

	formalparameters -> formalparameter .               (rule 20)

	')'            reduce using rule 20
	','            reduce using rule 20


State 46

	formalparameter -> type . identifier                (rule 21)

	identifier     shift, and enter state 49


State 47

	functionparameters -> '(' ')' .                     (rule 18)

	'}'            reduce using rule 18
	identifier     reduce using rule 18
	public         reduce using rule 18
	private        reduce using rule 18
	final          reduce using rule 18
	static         reduce using rule 18
	boolean        reduce using rule 18
	integer        reduce using rule 18
	char           reduce using rule 18
	void           reduce using rule 18


State 48

	functionhead -> modifiers functiontype identifier functionparameters .    (rule 16)

	'}'            reduce using rule 16
	identifier     reduce using rule 16
	public         reduce using rule 16
	private        reduce using rule 16
	final          reduce using rule 16
	static         reduce using rule 16
	boolean        reduce using rule 16
	integer        reduce using rule 16
	char           reduce using rule 16
	void           reduce using rule 16


State 49

	formalparameter -> type identifier .                (rule 21)

	')'            reduce using rule 21
	','            reduce using rule 21


State 50

	functionparameters -> '(' formalparameters ')' .    (rule 17)

	'}'            reduce using rule 17
	identifier     reduce using rule 17
	public         reduce using rule 17
	private        reduce using rule 17
	final          reduce using rule 17
	static         reduce using rule 17
	boolean        reduce using rule 17
	integer        reduce using rule 17
	char           reduce using rule 17
	void           reduce using rule 17


State 51

	formalparameters -> formalparameters ',' . formalparameter    (rule 19)

	identifier     shift, and enter state 30
	boolean        shift, and enter state 31
	integer        shift, and enter state 32
	char           shift, and enter state 33

	formalparametergoto state 52
	name           goto state 22
	simplename     goto state 23
	qualifiedname  goto state 24
	type           goto state 46
	primitivetype  goto state 26
	referencetype  goto state 27

State 52

	formalparameters -> formalparameters ',' formalparameter .    (rule 19)

	')'            reduce using rule 19
	','            reduce using rule 19


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 34
Number of terminals: 16
Number of non-terminals: 19
Number of states: 53
